{
	"info": {
		"_postman_id": "e54402c2-7d88-4917-8a10-7c34b3478b64",
		"name": "Schedule",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## üí°Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33461057"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin2\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/registration",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"registration"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "project",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ #3\",\r\n    \"description\": \"–û–ø–∏—Å–∞–Ω–∏–µ\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/project/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"project",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "add",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"c95d03e2-f5b1-4019-bd6b-54cbe1f8ed35\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/project/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"project",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/projects/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/project/get?project_id=b0083b8f-7842-48d8-87c5-6b034172996c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"project",
								"get"
							],
							"query": [
								{
									"key": "project_id",
									"value": "b0083b8f-7842-48d8-87c5-6b034172996c"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/project/delete?id=b0083b8f-7842-48d8-87c5-6b034172996c",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"project",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "b0083b8f-7842-48d8-87c5-6b034172996c"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEzNzAxMzk0LCJleHAiOjE3NDUyMzczOTR9.Q64HU9IF5UcEet6T2lTHzpKOh5lPfTgaYnwzc_uhQ-Y",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "noteboard",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å–∫–∏ –∑–∞–º–µ—Ç–æ–∫\",\r\n    \"description\": \"–û–ø–∏—Å–∞–Ω–∏–µ\",\r\n    \"project_id\": \"9087281c-ee12-4eb0-873f-49fb667f56df\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/noteboard/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"noteboard",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/noteboards/get?project_id=9087281c-ee12-4eb0-873f-49fb667f56df",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"noteboards",
								"get"
							],
							"query": [
								{
									"key": "project_id",
									"value": "9087281c-ee12-4eb0-873f-49fb667f56df"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/noteboard/get?noteboard_id=2cfcb254-6749-463b-9b6b-62c7a51f98c9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"noteboard",
								"get"
							],
							"query": [
								{
									"key": "noteboard_id",
									"value": "2cfcb254-6749-463b-9b6b-62c7a51f98c9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/noteboard/delete?id=2cfcb254-6749-463b-9b6b-62c7a51f98c9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"noteboard",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "2cfcb254-6749-463b-9b6b-62c7a51f98c9"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEzNzAxMzk0LCJleHAiOjE3NDUyMzczOTR9.Q64HU9IF5UcEet6T2lTHzpKOh5lPfTgaYnwzc_uhQ-Y",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "calendar",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è\",\r\n    \"description\": \"–û–ø–∏—Å–∞–Ω–∏–µ\",\r\n    \"project_id\": \"9087281c-ee12-4eb0-873f-49fb667f56df\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calendar/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calendar",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calendars/get?project_id=9087281c-ee12-4eb0-873f-49fb667f56df",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calendars",
								"get"
							],
							"query": [
								{
									"key": "project_id",
									"value": "9087281c-ee12-4eb0-873f-49fb667f56df"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calendar/get?calendar_id=8b25d771-d7fd-43c5-add4-17dd32656e67",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calendar",
								"get"
							],
							"query": [
								{
									"key": "calendar_id",
									"value": "8b25d771-d7fd-43c5-add4-17dd32656e67"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/noteboard/delete?id=2cfcb254-6749-463b-9b6b-62c7a51f98c9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"noteboard",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "2cfcb254-6749-463b-9b6b-62c7a51f98c9"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEzNzAxMzk0LCJleHAiOjE3NDUyMzczOTR9.Q64HU9IF5UcEet6T2lTHzpKOh5lPfTgaYnwzc_uhQ-Y",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "note",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"noteboard_id\": \"9f81527c-f1a5-4034-a0f3-fd8554a7ce23\",\r\n    \"content\": \"—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ\",\r\n    \"importance\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/note/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"note",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/notes/get?noteboard_id=9f81527c-f1a5-4034-a0f3-fd8554a7ce23",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								"get"
							],
							"query": [
								{
									"key": "noteboard_id",
									"value": "9f81527c-f1a5-4034-a0f3-fd8554a7ce23"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/note/get?note_id=6f3b8106-ca96-4da9-b5ea-a63f98c60af2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"note",
								"get"
							],
							"query": [
								{
									"key": "note_id",
									"value": "6f3b8106-ca96-4da9-b5ea-a63f98c60af2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/calendar/delete?id=8b25d771-d7fd-43c5-add4-17dd32656e67",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"calendar",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "8b25d771-d7fd-43c5-add4-17dd32656e67"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEzNzAxMzk0LCJleHAiOjE3NDUyMzczOTR9.Q64HU9IF5UcEet6T2lTHzpKOh5lPfTgaYnwzc_uhQ-Y",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è\",\r\n    \"reminder_date\": \"2015-12-25 15:32:06.427\",\r\n    \"content\": \"—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–±—ã—Ç–∏—è\",\r\n    \"calendar_id\": \"463f1d39-f699-4fad-a073-f09bb912686d\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/event/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"event",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/events/get?calendar_id=463f1d39-f699-4fad-a073-f09bb912686d",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"events",
								"get"
							],
							"query": [
								{
									"key": "calendar_id",
									"value": "463f1d39-f699-4fad-a073-f09bb912686d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/event/get?event_id=def2303c-26d3-4846-a043-46c889d1ac60",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"event",
								"get"
							],
							"query": [
								{
									"key": "event_id",
									"value": "def2303c-26d3-4846-a043-46c889d1ac60"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/event/delete?id=def2303c-26d3-4846-a043-46c889d1ac60",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"event",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "def2303c-26d3-4846-a043-46c889d1ac60"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEzNzAxMzk0LCJleHAiOjE3NDUyMzczOTR9.Q64HU9IF5UcEet6T2lTHzpKOh5lPfTgaYnwzc_uhQ-Y",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}